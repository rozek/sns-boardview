import{allowTextline as e,allowListSatisfying as t,allowOneOf as n,allowOrdinal as o,allowFunction as i,allowText as r,allowBoolean as s,allowCardinal as a,allowInteger as l}from"javascript-interface-library";import{allowBoard as d,ValueIsSticker as c,CSSStyleOfVisual as h}from"shareable-note-stickers";import u from"svelte-coordinate-conversion";import{Component as S,html as p}from"htm/preact";import{DragClickRecognizerFor as g,DragRecognizerFor as k}from"protoux";function _(e,t){if(null==e)return{};var n={};for(var o in e)if({}.hasOwnProperty.call(e,o)){if(t.indexOf(o)>=0)continue;n[o]=e[o]}return n}const m=["Sticker","onPointerEvent"],$=["Mode","Geometry","onPointerEvent"];let x,f,y,b,w,v,M,G,C,E,L,N,P,D,B,H=e=>e;const{fromDocumentTo:W}=u,V=document.createElement("style");V.setAttribute("id","SNS Stylesheet"),V.innerHTML="/*******************************************************************************\n*                                                                              *\n*                        Shareable Note Stickers (SNS)                         *\n*                                                                              *\n*******************************************************************************/\n\n/**** all SNS elements are absolutely positioned ****/\n\n  .SNS {\n    display:block; position:absolute;\n    margin:0px; padding:0px;\n    background:none; border:none; border-radius:0px; outline:none;\n  }\n\n/**** Error Indicator ****/\n\n  .SNS.ErrorIndicator {\n    overflow:hidden;\n    left:0px; top:0px; width:24px; height:24px;\n    background:url(\"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3Csvg width='24px' height='24px' viewBox='0 0 24 24' fill='none' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M12 17.0001H12.01M12 10.0001V14.0001M6.41209 21.0001H17.588C19.3696 21.0001 20.2604 21.0001 20.783 20.6254C21.2389 20.2985 21.5365 19.7951 21.6033 19.238C21.6798 18.5996 21.2505 17.819 20.3918 16.2579L14.8039 6.09805C13.8897 4.4359 13.4326 3.60482 12.8286 3.32987C12.3022 3.09024 11.6978 3.09024 11.1714 3.32987C10.5674 3.60482 10.1103 4.4359 9.19614 6.09805L3.6082 16.2579C2.74959 17.819 2.32028 18.5996 2.39677 19.238C2.46351 19.7951 2.76116 20.2985 3.21709 20.6254C3.7396 21.0001 4.63043 21.0001 6.41209 21.0001Z' stroke='orange' stroke-width='2' stroke-linecap='round' stroke-linejoin='round' fill='white'/%3E%3C/svg%3E\");\n    pointer-events:auto;\n  }\n\n\n/**** BoardView ****/\n\n  .SNS.BoardView {\n    left:0px; top:0px; right:0px; bottom:0px;\n  }\n\n/**** Sticker and Contents, Cover ****/\n\n  .SNS.Sticker {}\n  .SNS.Sticker > .SNS {\n    -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none;\n    user-select:none;\n\n    display:block; position:absolute;\n    left:0px; top:0px; width:100%; height:100%; right:auto; bottom:auto;\n  }\n\n  .SNS.Cover {\n    -webkit-user-select:none; -moz-user-select:none; -ms-user-select:none;\n    user-select:none;\n\n    z-index:1000000;\n  }\n\n/**** Selection Markers ****/\n\n  .SNS.Sticker.selected, .SNS.Cover[selected] {\n    outline:dotted 2px orangered;\n  }\n\n  .SNS.ShapeHandle {\n    width:8px; height:8px;\n    background:orangered; border:solid 1px darkgray;\n    z-index:1000001; /* above .SNS.Cover */\n  }\n\n/**** Selection Lasso ****/\n\n  .SNS.Lasso {\n    background:rgba(255,69,0, 0.1); /* border:dashed 2px orangered; */\n  }\n\n/**** Dragging Guides ****/\n\n  .SNS.horizontalGuide.Edge {\n    left:0px; right:0px; height:1px;\n    border-top:dashed 1px orangered;\n  }\n  .SNS.verticalGuide.Edge {\n    top:0px; bottom:0px; width:1px;\n    border-left:dashed 1px orangered;\n  }\n\n  .SNS.horizontalGuide.Center {\n    left:0px; right:0px; height:1px;\n    border-top:dotted 1px orangered;\n  }\n  .SNS.verticalGuide.Center {\n    top:0px; bottom:0px; width:1px;\n    border-left:dotted 1px orangered;\n  }\n\n/**** Placeholder ****/\n\n  .SNS.Placeholder {\n    display:block; position:relative;\n    width:100%; height:100%;\n  }\n\n  .SNS.Placeholder > * {\n    display:block; position:absolute;\n    left:50%; top:50%;\n    transform:translate(-55%,-50%);\n    white-space:nowrap;\n  }\n\n",document.head.appendChild(V);class z extends S{constructor(...e){super(...e),this._Board=void 0,this._StickerList=[],this._pointedSticker=void 0,this._selectedStickers=[],this._SelectionLimit=Infinity,this._LassoStart=void 0,this._LassoEnd=void 0,this._SelectionBeforeLasso=[],this._ShapeMode=void 0,this._shapedStickers=void 0,this._initialGeometries=void 0,this._SnapToGrid=!1,this._GridWidth=1,this._GridHeight=1,this._StickerRecognizerSlot={},this._ShapeHandleRecognizerSlot={},this._LassoRecognizerSlot={},this.state={Value:0}}_mountBoard(e){null!=e&&null!=this.base&&(e._View=this.base,null!=e._onMount&&e._onMount()),this._Board=e}_unmountBoard(){const e=this._Board;null!=e&&(e._View=void 0,null!=e._onUnmount&&e._onUnmount())}componentDidMount(){this._mountBoard(this._Board)}componentWillUnmount(){this._unmountBoard()}rerender(){this.setState({Value:this.state.Value+1})}render(l){const u=this;let{Classes:S,Board:_,StickerList:m,Placeholder:$,Mode:P,SelectionLimit:D,selectedStickers:B,onSelectionChange:V,onStickerSelected:z,onStickerDeselected:I,SelectionFrameStyle:R,SelectionHandleStyle:O,LassoMode:K,onGeometryChange:j,SnapToGrid:A,GridWidth:Z,GridHeight:q}=l;function J(){u._pointedSticker=void 0,u._shapedStickers=void 0,u._initialGeometries=void 0}function Q(){null!=u._shapedStickers&&ie(u._shapedStickers,u._initialGeometries),J()}this._Board!==_&&(this._unmountBoard(),this._mountBoard(_)),console.log("SNS_BoardView render, selectedStickers",B),e("board CSS class names",S),d("board",_),t("sticker list",m,c),e("placeholder text",$),n("board mode",P,["edit","run"]),o("selection limit",D),t("list of selected stickers",B,c),i("selection change callback",V),i("selection callback",z),i("deselection callback",I),e("selection frame CSS style",R),r("selection handle CSS style",O),n("lasso selection mode",K,["touch","contain"]),i("geometry change callback",j),s('"SnapToGrid" mode',A),a("grid width",Z),a("grid height",q),null==S&&(S=""),null==$&&($="(empty)"),null==P&&(P="run"),null==D&&(D=Infinity),null==B&&(B=[]),null==O&&(O="background:orangered; border:solid 1px darkgray"),null==K&&(K="contain"),null==A&&(A=!1),null==Z&&(Z=10),null==q&&(q=10);const X=new Set;function Y(e,t=[]){const n=e.slice();t.forEach(e=>{n.indexOf(e)<0&&n.push(e)}),B.length>u._SelectionLimit&&(n.length=u._SelectionLimit);const o=[],i=[];n.forEach(e=>{u._selectedStickers.indexOf(e)<0&&o.push(e)}),u._selectedStickers.forEach(e=>{n.indexOf(e)<0&&i.push(e)}),B=u._selectedStickers=n,(o.length>0||i.length>0)&&(Q(),null!=V&&V(B)),i.length>0&&null!=I&&i.forEach(e=>{I(e)}),o.length>0&&null!=z&&o.forEach(e=>{z(e)})}function ee(e){return B.indexOf(e)>=0}function te(){const{x:e,y:t}=u._LassoStart,{x:n,y:o}=u._LassoEnd||u._LassoStart;return{x:e<=n?e:n,y:t<=o?t:o,Width:e<=n?n-e:e-n,Height:t<=o?o-t:t-o}}function ne(e,t){u._LassoEnd={x:e,y:t},Y(u._SelectionBeforeLasso,function(){let{x:e,y:t,Width:n,Height:o}=te(),i=e+n,r=t+o;return u._StickerList.filter("touch"===K?n=>{if(!n.isVisible||n.isLocked)return!1;const{x:o,y:s,Width:a,Height:l}=n.Geometry;return e<=o+a&&o<=i&&t<=s+l&&s<=r}:n=>{if(!n.isVisible||n.isLocked)return!1;const{x:o,y:s,Width:a,Height:l}=n.Geometry;return e<=o&&o+a<=i&&t<=s&&s+l<=r})}())}B=B.filter(e=>c(e)&&!X.has(e)?(X.add(e),!0):(Q(),!1)),B.length>D&&Y(B.slice(0,D)),u._StickerList=m,u._selectedStickers=B,u._SelectionLimit=D,u._SnapToGrid=A,u._GridWidth=Z,u._GridHeight=q;const oe=g(u._LassoRecognizerSlot,{onlyFrom:".SNS.BoardView",Threshold:4,onDragStarted:(e,t,n,o)=>{u._SelectionBeforeLasso=B.slice(),({left:e,top:t}=W("local",{left:e,top:t},u.base)),u._LassoStart={x:e,y:t},ne(e,t),u.rerender()},onDragContinued:(e,t,n,o)=>{ne(u._LassoStart.x+n,u._LassoStart.y+o),u.rerender()},onDragFinished:(e,t,n,o)=>{ne(u._LassoStart.x+n,u._LassoStart.y+o),u._LassoStart=u._LassoEnd=void 0,u._SelectionBeforeLasso=[],u.rerender()},onDragCancelled:(e,t,n,o)=>{u._LassoStart=u._LassoEnd=void 0,Y(u._SelectionBeforeLasso),u._SelectionBeforeLasso=[],u.rerender()},onClicked:function(){Y([])}});function ie(e,t){null!=j&&(j(e,t),u.rerender())}function re(e,t,n,o,i){if(null==j)return;let r=0,s=0,a=0,l=0;switch(t){case"nw":r=n,a=-n,s=o,l=-o;break;case"n":s=o,l=-o;break;case"ne":a=n,s=o,l=-o;break;case"e":a=n;break;case"se":a=n,l=o;break;case"s":l=o;break;case"sw":r=n,a=-n,l=o;break;case"w":r=n,a=-n;break;case"c":r=n,s=o}null==i&&(i=u._initialGeometries),ie(e,i.map(e=>{let n=Math.max(0,e.Width+a),o=Math.max(0,e.Height+l),i=e.x+r,d=i+n,c=e.y+s,h=c+o;if(u._SnapToGrid){let e=u._GridWidth*Math.round(i/u._GridWidth),r=u._GridWidth*Math.round(d/u._GridWidth),s=u._GridHeight*Math.round(c/u._GridHeight),a=u._GridHeight*Math.round(h/u._GridHeight);switch(t){case"nw":i=Math.min(e,d),c=Math.min(s,h);break;case"n":c=Math.min(s,h);break;case"ne":d=Math.max(i,r),c=Math.min(s,h);break;case"e":d=Math.max(i,r);break;case"se":d=Math.max(i,r),h=Math.max(c,a);break;case"s":h=Math.max(c,a);break;case"sw":i=Math.min(e,d),h=Math.max(c,a);break;case"w":i=Math.min(e,d);break;case"c":i=e,d=i+n,c=s,h=c+o}}return{x:i,y:c,Width:d-i,Height:h-c}}))}const se=g(u._StickerRecognizerSlot,{onlyFrom:".SNS.Cover",Threshold:4,onDragStarted:(e,t,n,o,i)=>{ee(u._pointedSticker)||(i.shiftKey||i.metaKey?Y([u._pointedSticker],u._selectedStickers):Y([u._pointedSticker])),u._shapedStickers=u._selectedStickers,u._initialGeometries=u._selectedStickers.map(e=>e.Geometry),re(u._shapedStickers,"c",n,o)},onDragContinued:(e,t,n,o)=>{null!=u._shapedStickers&&re(u._shapedStickers,"c",n,o)},onDragFinished:(e,t,n,o)=>{null!=u._shapedStickers&&(re(u._shapedStickers,"c",n,o),J())},onDragCancelled:(e,t,n,o)=>{Q()},onClicked:(e,t,n)=>{if(0===D)return;const o=u._pointedSticker;let i,r,s=!1;n.shiftKey||n.metaKey?(s=!0,ee(o)?(r=[o],B=B.filter(e=>e!==o)):(B.length===D&&(r=[B.shift()]),i=[o],B.push(o))):(r=B.filter(e=>e!==o),s=!ee(o),i=s?[o]:[],B=[o]),s&&null!=V&&V(B),null!=r&&null!=I&&r.forEach(e=>{I(e)}),null!=i&&null!=z&&i.forEach(e=>{z(e)}),s&&u.rerender()}}),ae=k(u._ShapeHandleRecognizerSlot,{onlyFrom:".SNS.ShapeHandle",Threshold:0,onDragStarted:(e,t,n,o)=>{u._shapedStickers=u._selectedStickers,u._initialGeometries=u._selectedStickers.map(e=>e.Geometry),re(u._shapedStickers,u._ShapeMode,n,o)},onDragContinued:(e,t,n,o)=>{null!=u._shapedStickers&&re(u._shapedStickers,u._ShapeMode,n,o)},onDragFinished:(e,t,n,o)=>{null!=u._shapedStickers&&(re(u._shapedStickers,u._ShapeMode,n,o),J())},onDragCancelled:(e,t,n,o)=>{Q()}}),le=(e,t)=>{u._ShapeMode=t,ae(e)},de=new WeakMap,ce=new WeakMap,he=null==_?void 0:h(_);return p(w||(w=H`<div class="SNS BoardView ${0}" style=${0}
        onPointerDown=${0} onPointerMove=${0}
        onPointerUp=${0} onPointerCancel=${0}
      >
        ${0}

        ${0}

        ${0}
        ${0}
        ${0}
        ${0}
      </div>`),S,he,oe,oe,oe,oe,null==_?p(v||(v=H`<div class="SNS Placeholder"><div>(no Board to show)</div></div>`)):null==m?p(M||(M=H`<div class="SNS Placeholder"><div>(no Stickers to show)</div></div>`)):m.map(e=>{if(!e.isVisible)return"";const t=e.Geometry,n=ee(e);return p(G||(G=H`<${0} Sticker=${0} key=${0}
                  selected=${0}
                  SelectionFrameStyle=${0}
                  Geometry=${0}
                  builtinDragging=${0}
                  builtinSelection=${0}
                />`),F,e,e.Id,n&&"run"===P,R,t,function(e){let t=de.get(e);return null==t&&de.set(e,t=k(e,{onlyFrom:".builtinDraggable",neverFrom:".notBuiltinDraggable",Threshold:4,onDragStarted:(t,n,o,i,r)=>{ce.set(e,e.Geometry),re([e],"c",o,i,[ce.get(e)])},onDragContinued:(t,n,o,i)=>{ce.has(e)&&re([e],"c",o,i,[ce.get(e)])},onDragFinished:(t,n,o,i)=>{ce.has(e)&&(re([e],"c",o,i,[ce.get(e)]),ce.delete(e))},onDragCancelled:(t,n,o,i)=>{ce.has(e)&&ie([e],[ce.get(e)]),ce.delete(e)}})),t}(e),function(e){return function(t){0===t.button&&Y([e])}}(e))}),null!=m&&"edit"===P?m.map(e=>{if(!e.isVisible)return"";if(e.isLocked)return p(C||(C=H`
                  <${0} Sticker=${0} key=${0}
                    onPointerDown=${0} onPointerMove=${0}
                    onPointerUp=${0} onPointerCancel=${0}
                  />
                `),T,e,e.Id+"c",oe,oe,oe,oe);{const t=ee(e);return p(E||(E=H`
                  <${0} Sticker=${0} key=${0}
                    selected=${0}
                    onPointerEvent=${0}
                  />
                `),T,e,e.Id+"c",t,t=>((e,t)=>{u._ShapeMode="c",u._pointedSticker=t,se(e)})(t,e))}}):"",B.length>0?B.filter(e=>e.isVisible&&!e.isLocked).map(e=>{const t=e.Id,n=e.Geometry;return p(L||(L=H`
                <${0} key=${0} Mode="nw" Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0}  Mode="n"  Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0} Mode="ne" Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0}  Mode="e"  Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0} Mode="se" Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0}  Mode="s"  Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0} Mode="sw" Geometry=${0}
                  onPointerEvent=${0}/>
                <${0} key=${0}  Mode="w"  Geometry=${0}
                  onPointerEvent=${0}/>
              `),U,t+"nw",n,e=>le(e,"nw"),U,t+"n",n,e=>le(e,"n"),U,t+"ne",n,e=>le(e,"ne"),U,t+"e",n,e=>le(e,"e"),U,t+"se",n,e=>le(e,"se"),U,t+"s",n,e=>le(e,"s"),U,t+"sw",n,e=>le(e,"sw"),U,t+"w",n,e=>le(e,"w"))}):"",null==this._LassoStart?"":p(N||(N=H`<div class="SNS Lasso" style=${0}></>`),function(){const{x:e,y:t,Width:n,Height:o}=te();return`left:${e}px; top:${t}px; width:${n}px; height:${o}px`}()),function(){if(null==u._shapedStickers)return"";const e={},t={};u._StickerList.filter(e=>!ee(e)).forEach(n=>{const{y:o,Height:i}=n.Geometry,r=Math.round(o),s=Math.round(o+i/2),a=Math.round(o+i);e[r]=e[a]=!0,t[s]=!0});const n={};u._shapedStickers.forEach(o=>{const{y:i,Height:r}=o.Geometry,s=Math.round(i),a=Math.round(i+r/2),l=Math.round(i+r);e[s]&&(n[s]="Edge"),e[a]&&"Edge"!==n[a]&&(n[a]="Center"),e[l]&&(n[l]="Edge"),t[s]&&"Edge"!==n[s]&&(n[s]="Center"),t[a]&&"Edge"!==n[a]&&(n[a]="Center"),t[l]&&"Edge"!==n[l]&&(n[l]="Center")});const o=[];for(let e in n)null!=n[e]&&o.push(e);return p(x||(x=H`${0}`),o.map(e=>p(f||(f=H`
          <div class="SNS horizontalGuide ${0}" style="top:${0}px"/>
        `),n[e],e)))}(),function(){if(null==u._shapedStickers)return"";const e={},t={};u._StickerList.filter(e=>!ee(e)).forEach(n=>{const{x:o,Width:i}=n.Geometry,r=Math.round(o),s=Math.round(o+i/2),a=Math.round(o+i);e[r]=e[a]=!0,t[s]=!0});const n={};u._shapedStickers.forEach(o=>{const{x:i,Width:r}=o.Geometry,s=Math.round(i),a=Math.round(i+r/2),l=Math.round(i+r);e[s]&&(n[s]="Edge"),e[a]&&"Edge"!==n[a]&&(n[a]="Center"),e[l]&&(n[l]="Edge"),t[s]&&"Edge"!==n[s]&&(n[s]="Center"),t[a]&&"Edge"!==n[a]&&(n[a]="Center"),t[l]&&"Edge"!==n[l]&&(n[l]="Center")});const o=[];for(let e in n)null!=n[e]&&o.push(e);return p(y||(y=H`${0}`),o.map(e=>p(b||(b=H`
          <div class="SNS verticalGuide ${0}" style="left:${0}px"/>
        `),n[e],e)))}())}}class F extends S{constructor(...e){super(...e),this._Sticker=void 0}componentDidMount(){const e=this._Sticker;e._View=this.base,null!=e._onMount&&e._onMount()}componentWillUnmount(){const e=this._Sticker;e._View=void 0,null!=e._onUnmount&&e._onUnmount()}render(e){let{Sticker:t,selected:n,SelectionFrameStyle:i,Geometry:r,builtinSelection:s,builtinDragging:a}=e;this._Sticker=t;let{x:d,y:c,Width:u,Height:S}=r;l("sticker x position",d),l("sticker y position",c),o("sticker width",u),o("sticker height",S);const g=null!=d&&null!=u&&null!=c&&null!=S?`left:${d}px; top:${c}px; width:${u}px; height:${S}px; right:auto; bottom:auto;`:"";return p(P||(P=H`<div class="SNS Sticker ${0}" style="
        ${0};
        ${0}
        ${0}
      ">
        ${0}
      </div>`),n?"selected":"",g,n&&null!=i?`outline:${i};`:"",h(t)||"",t.Rendering({builtinSelection:s,builtinDragging:a}))}}class T extends S{render(e){let{Sticker:t,onPointerEvent:n}=e,o=_(e,m),{x:i,y:r,Width:s,Height:a}=t.Geometry;const l=null!=i&&null!=s&&null!=r&&null!=a?`left:${i}px; top:${r}px; width:${s}px; height:${a}px; right:auto; bottom:auto;`:"";return p(D||(D=H`<div class="SNS Cover" style="${0}" ...${0}
        onPointerDown=${0} onPointerMove=${0}
        onPointerUp=${0} onPointerCancel=${0}
      />`),l,o,n,n,n,n)}}class U extends S{render(e){let{Mode:t,Geometry:n,onPointerEvent:o}=e,i=_(e,$),{x:r,y:s,Width:a,Height:l}=n;const d=r-8,c=Math.round(r+a/2)-4,h=r+a,u=s-8,S=Math.round(s+l/2)-4,g=s+l;let k,m;switch(t){case"nw":k=`left:${d}px; top:${u}px;`,m="nwse";break;case"n":k=`left:${c}px; top:${u}px;`,m="ns";break;case"ne":k=`left:${h}px; top:${u}px;`,m="nesw";break;case"e":k=`left:${h}px; top:${S}px;`,m="ew";break;case"se":k=`left:${h}px; top:${g}px;`,m="nwse";break;case"s":k=`left:${c}px; top:${g}px;`,m="ns";break;case"sw":k=`left:${d}px; top:${g}px;`,m="nesw";break;case"w":k=`left:${d}px; top:${S}px;`,m="ew"}return m="cursor:"+m+"-resize",p(B||(B=H`<div class="SNS ShapeHandle" style="${0} ${0}" ...${0}
        onPointerDown=${0} onPointerMove=${0}
        onPointerUp=${0} onPointerCancel=${0}
      />`),k,m,i,o,o,o,o)}}window.SNS_BoardView=z,document.dispatchEvent(new CustomEvent("SNS_BoardView",{detail:window.SNS_BoardView}));export{z as SNS_BoardView};
//# sourceMappingURL=sns-boardview.modern.js.map
